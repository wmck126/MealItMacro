continue
params
continue
params
continue
params
continue
params
meal_params
continue
Meal.last.id + 1
Meal.last.id
meal
continue
macros
continue
meal = Meal.find_or_create_by!(meal_params) 
continue
meal = Meal.create!(meal_params)
macros = TotalMacro.create!(macro_params)
meal_params
continue
dessert_array
continue
dessert_array
continue
dessert_array
continue
create_meals(dessert_array)
create_meals(dinner_array)
create_meals(lunch_array)
lunch_array
breakfast_array
continue
lunch_array
continue
[i]
i
continue
s.find_index(["recipe"])
s.find_index()
food_array
continue
food_array
s
s.int
(s["recipe"]["totalNutrients"]["FAT"]["quantity"])/(s["recipe"]["yield"])
s["recipe"]["totalNutrients"]["FAT"]["quantity"]
s["recipe"]["totalNutrients"]["FAT"]
s["recipe"]["mealType"]
s["recipe"][["mealType"]]
s["recipe"]["mealType"]
s["recipe"].mealType
s["recipe"]"mealType"
s["recipe"]["mealType"]
let fat = s["recipe"]["totalNutrients]["FAT"]["quantity"]
s["recipe"]["totalNutrients]
s["recipe"]["totalNutrients]["FAT"]["quantity"]
s[]
continue
s
food_array.each {|s| return s}
food_array.each do |s|
continue
render json: servCals
servCals = calories / serving_size
continue
servCals
servCals = calories / serving_size
continue
calories / serving_size
serving_size
calories
continue
yield
calories
continue
@calories
continue
food_array[0]["recipe"]["label"]
food_array.recipe.label
food_array
continue
food_array
continue
food_array
continue
food_array
continue
path
s
continue
s
s["description"]
continue
s.["description"]
["description"]
s[0]
s
s.map{|x| x.description}
s.select("description")
s.find("description")
s.description
s["description"]
s.select{|x| x["foodNutrients]}
s.detect{|x| x["foodNutrients]}
s.detect(|x| x["foodNutrients])
s.dig(:foodNutrients)
s.detect{|x| x["nutrientId"] = 1008}
s["foodNutrients"].detect{|x| x["nutrientId"] = 1008}
continue
food_array.["foodNutrients"].detect{|x| x["nutrientId"] = 1008
food_array.["foodNutrients"].detect{|x| x["nutrientName"] = "Fatty acids, total saturated"
food_array.dig(:foodNutrients, )
food_array.dig(:foodNutrients)
food_array
continue
name: s["description"]) end end
name: s["description"]) end
name: s["description"])
name: s["description"]
continue
  end
      )
      fat: s["foodNutrients"].detect{|x| x["nutrientId"] = 1004}
      carbs: s["foodNutrients"].detect{|x| x["nutrientId"] = 1005}, 
      protein: s["foodNutrients"].detect{|x| x["nutrientId"] = 1257}, 
      calories: s["foodNutrients"].detect{|x| x["nutrientId"] = 1008}, 
      name: s["description"], 
Ingredient.create(
Ingredient.create(name: s["description])end end
Ingredient.create(name: s["description])]
Ingredient.create(name: s["description])
continue
food_array["foodNutrients"].detect{|x| x["nutrientId"] = 1257}
food_array["foodNutrients"]
food_array["foodNutrients"]["nutrientID"=> 1003]
food_array["foodNutrients"]["nutrientID": 1003]
food_array["foodNutrients"][0]
food_array["description"]
continue
food_array
continue
food_array
continue
food_array
continue
food_array
continue
page_number: 1
food_array
continue
food_array
continue
food_array
